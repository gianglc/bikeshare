{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 57,
   "metadata": {},
   "outputs": [],
   "source": [
    "from os import listdir\n",
    "import datetime\n",
    "\n",
    "journals_dir = \"../journals/\"\n",
    "journals_doc = \"../docs/journals.md\"\n",
    "\n",
    "# Open the document\n",
    "doc = open(journals_doc, 'w')\n",
    "\n",
    "# Markdown of what comes before the directory listing\n",
    "\n",
    "pre_markdown = \"\"\"# Journals\n",
    "\n",
    "Over the month, Giang and I have documented our process of decision making, analysis and insights into quick thoughts as journals. Theses ideas also outline the process of how we undertook the project over time and how we planned everything step by step. Feel free to take a look below.\n",
    "\n",
    "\"\"\"\n",
    "\n",
    "# Write to the document\n",
    "doc.write(pre_markdown)\n",
    "\n",
    "link_num = 0\n",
    "for file_name in sorted(listdir(journals_dir)):\n",
    "    if file_name[0] != \".\" and file_name != 'complie_journal.ipynb':\n",
    "        \n",
    "        ''' File Input''' \n",
    "        # Take in the first line for a title\n",
    "        with open(journals_dir+file_name) as f:\n",
    "            first_line = f.readline().strip()\n",
    "            # Strip '#' sign out for markdown files\n",
    "            if first_line[0] == \"#\": first_line = first_line[1:].strip()\n",
    "                \n",
    "        title = first_line \n",
    "                \n",
    "        # Take filename \n",
    "        base = file_name.split(\".\")[0]\n",
    "        \n",
    "        ''' Author and Date'''\n",
    "        author = base.split(\"_\")[1].capitalize()\n",
    "        \n",
    "        date = base.split(\"_\")[0]\n",
    "        date = datetime.datetime.strptime(date,\"%Y%m%d\").strftime(\"%d, %b %Y\")\n",
    "                \n",
    "        '''' HTML Link Constructor '''\n",
    "        pre = '../journals/'\n",
    "        post = '.html'\n",
    "        link = pre+base+post\n",
    "        \n",
    "        ''' Markdown Output Link Constructor '''\n",
    "        \n",
    "        link_img = \"![img_{}](../images/link.png)\".format(link_num)\n",
    "        link_num += 1\n",
    "        \n",
    "        md_link = \"[{}]({})\".format(link_img,link)\n",
    "        \n",
    "        ''' Markdown Line '''\n",
    " \n",
    "        # Date | Title | Author | Link\n",
    "        md_line = \"| `{}` | {} | {} | {} |\".format(date, title, author, md_link)\n",
    "        \n",
    "        # Write to Markdown document\n",
    "        doc.write(\"\\n\"+md_line)\n",
    "        \n",
    "\n",
    "doc.close()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
